@inject HttpClient httpClient

<div class="h-full">
    @if(analysisPrincipleDTOs != null)
    {
        <div class="flex flex-col gap-y-[25px] h-full overflow-y-auto flow-wrap">
            @foreach (var item in analysisPrincipleDTOs)
            {
                <div>
                    <div class="flex flex-row gap-y-[25px] w-full justify-between items-center">
                        <div>
                            <h3 class="text-xl text-bold">@item.Title</h3>
                            <h3 class="text-lg text-semibold">@item.ShortDescription</h3>
                            <ul class="list-disc list-inside">
                                @foreach (var aspect in item.Aspects)
                                {
                                    <li class="text-md">@aspect</li>
                                }
                            </ul>
                        </div>
                        <div class="self-center h-[50px]">
                            <input class="h-[30px] w-[30px] mr-[10px]" type="checkbox" @onchange="OnChange" />
                        </div>
                    </div>
                    <div class="h-[3px] w-full bg-green-300 mb-[10px] mt-[5px] mr-[5px]"></div>
                </div>
            }

            <div class="pt-[15px]">

            </div>

        </div>
    }

</div>


@code {
    [Parameter]
    public EventCallback<bool> clickedChange { get; set; }

    [Parameter]
    public List<AnalysisPrinciplesDTO> analysisPrincipleDTOs { get; set; }

    private void OnChange(ChangeEventArgs args)
    {
        bool b = (bool)args.Value;
        clickedChange.InvokeAsync(b);
    }
}
